rm(list = ls())
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
j
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 1000, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
# Setting up a fresh environment
#rm(list = ls())
# New Data -- combining a) and parts of b) here
# as an exercise in learning how to use tibble (or not!).
# It should functionally be identical to doing a function(x)
set.seed(02139)
y0 <- rnorm(n = 1000, mean = 1, sd = 1)
j <- rep(1:50, each = 20)
mu_j <- rep(runif(n = 50, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 1000, mean = 0, sd = 1)
treat <- rep(rbinom(n = 50, size = 1, prob = 0.5), each = 20)
# Here's the new function
p_test <- function(v0, v1, clusters = j, mu = mu_j, treatment = treat){
if(length(v0) != length(v1)){
stop("Inputs of differing lengths!")
}
n <- length(v1)
dat <- as.data.frame(cbind(v0, v1, clusters, mu, treatment))
# Calculating ATE using only observed outcomes
ATE <- mean(dat$v1[dat$treatment == 1]) - mean(dat$v0[dat$treatment == 0])
# getting the test statistic
t_stat <- (ATE - 0) / (1 / sqrt(n))
# test statistic to p-value (two-sided)
p_value <- pt(q = t_stat,
df = n - 2,
lower.tail = FALSE)
return(p_value)
}
# and here's the new y1
tau = 0.2
y1 <- y0 + rnorm(n = 1000, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 1000, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_test(v0 = y0, v1 = y1)
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 1000, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 4000, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 1000, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot3 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot3
### 20 Clusters
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot3 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot3
samplesizes <- c(50, 100, 200, 500)
dat <- as.data.frame(cbind(y0, y1))
#dat_sample <- dat[sample(nrow(dat), size = 50, replace = FALSE),]
for (k in samplesizes) {
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
dat_sample$newy1 <- dat_sample$y0 + rnorm(n = k, mean = tau, sd = 1)
p_values[i] <- p_test(dat_sample$y0, dat_sample$newy1)
}
numerator <- sum(p_values < 0.5)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot_k <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = paste("Sample size = ", k))+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
print(plot_k)
}
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
dat <- as.data.frame(cbind(y0, y1))
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
### 20 Clusters
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot3 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot3
samplesizes <- c(50, 100, 200) # Note we can't draw 500 since n = 400!
dat <- as.data.frame(cbind(y0, y1))
#dat_sample <- dat[sample(nrow(dat), size = 50, replace = FALSE),]
for (k in samplesizes) {
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
dat_sample$newy1 <- dat_sample$y0 + rnorm(n = k, mean = tau, sd = 1)
p_values[i] <- p_test(dat_sample$y0, dat_sample$newy1)
}
numerator <- sum(p_values < 0.5)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot_k <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = paste("Sample size = ", k))+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
print(plot_k)
}
### 20 Clusters
set.seed(02139)
y0 <- rnorm(n = 400, mean = 1, sd = 1)
j <- rep(1:20, each = 20)
mu_j <- rep(runif(n = 20, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 400, mean = 0, sd = 1)
treat <- rep(rbinom(n = 20, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 400, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot3 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot3
samplesizes <- c(50, 100, 200) # Note we can't draw 500 since n = 400!
dat <- as.data.frame(cbind(y0, y1))
#dat_sample <- dat[sample(nrow(dat), size = 50, replace = FALSE),]
for (k in samplesizes) {
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
dat_sample$newy1 <- dat_sample$y0 + rnorm(n = k, mean = tau, sd = 1)
p_values[i] <- p_test(dat_sample$y0, dat_sample$newy1)
}
numerator <- sum(p_values < 0.5)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot_k <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = paste("20 Clusters:", "Sample size = ", k))+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
print(plot_k)
}
### Doubling to 40 Clusters
set.seed(02139)
y0 <- rnorm(n = 800, mean = 1, sd = 1)
j <- rep(1:40, each = 20)
mu_j <- rep(runif(n = 40, min = 0, max = 10), each = 20)
y0_star <- mu_j + rnorm(n = 800, mean = 0, sd = 1)
treat <- rep(rbinom(n = 40, size = 1, prob = 0.5), each = 20)
p_values <- NULL
tau = 0.2
y1 <- y0 + rnorm(n = 800, mean = tau, sd = 1)
p_test(v0 = y0, v1 = y1)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 800, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 800, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot3 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot3
samplesizes <- c(50, 100, 200)
dat <- as.data.frame(cbind(y0, y1))
#dat_sample <- dat[sample(nrow(dat), size = 50, replace = FALSE),]
for (k in samplesizes) {
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
dat_sample$newy1 <- dat_sample$y0 + rnorm(n = k, mean = tau, sd = 1)
p_values[i] <- p_test(dat_sample$y0, dat_sample$newy1)
}
numerator <- sum(p_values < 0.5)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot_k <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = paste("40 Clusters:", "Sample size = ", k))+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
print(plot_k)
}
set.seed(02139)
y0 <- rnorm(n = 800, mean = 1, sd = 1)
j <- rep(1:25, each = 40)
mu_j <- rep(runif(n = 25, min = 0, max = 10), each = 40)
y0_star <- mu_j + rnorm(n = 800, mean = 0, sd = 1)
treat <- rep(rbinom(n = 25, size = 1, prob = 0.5), each = 40)
set.seed(02139)
y0 <- rnorm(n = 800, mean = 1, sd = 1)
j <- rep(1:25, each = 40)
mu_j <- rep(runif(n = 25, min = 0, max = 10), each = 40)
y0_star <- mu_j + rnorm(n = 800, mean = 0, sd = 1)
treat <- rep(rbinom(n = 25, size = 1, prob = 0.5), each = 40)
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 800, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
head(p_values)
prop.05 <- length(p_values[p_values < 0.05])/  length(p_values)
prop.05
taus <- seq(from = 0, to = 1,
by = 0.1)
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
newy1 <- y0 + rnorm(n = 800, mean = tau, sd = 1)
p_values[i] <- p_test(y0, newy1)
}
numerator <- sum(p_values < 0.05)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot5 <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = "Plot 3")+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
plot5
samplesizes <- c(50, 100, 200)
dat <- as.data.frame(cbind(y0, y1))
#dat_sample <- dat[sample(nrow(dat), size = 50, replace = FALSE),]
for (k in samplesizes) {
dat_sample <- dat[sample(nrow(dat), size = k, replace = FALSE),]
for (j in taus) {
tau <- j
p_values <- NULL
for (i in 1:10000) {
dat_sample$newy1 <- dat_sample$y0 + rnorm(n = k, mean = tau, sd = 1)
p_values[i] <- p_test(dat_sample$y0, dat_sample$newy1)
}
numerator <- sum(p_values < 0.5)
denominator <- length(p_values)
prop.05[(j*10) + 1] <- as.numeric(numerator) / as.numeric(denominator)
}
plot_k <- ggplot(data = as.data.frame(cbind(taus, prop.05)),
aes(x = taus, y = prop.05))+
geom_smooth()+
ggtitle(label = paste("25 Clusters:", "Sample size = ", k))+
xlab("Tau")+
ylim(0, 1)+
ylab("Proportion p < 0.05")+
theme_minimal()
print(plot_k)
}
